{"version":3,"sources":["entities/Highlight.js","entities/Policy.js","Hub.js","reportWebVitals.js","index.js"],"names":["Highlight","props","text","high","highlight","pos","toLocaleLowerCase","indexOf","chunk1","substring","chunk2","length","chunk3","style","borderRadius","PolicyItem","useState","copied","setCopied","policy","className","name","href","homepage","target","rel","author","title","download","registry","onCopy","setTimeout","url","mutation","description","descriptionCriteria","resources","map","r","keywords","k","Hub","state","dataSet","keywordsOptionsSelected","this","fetchData","a","fetch","response","json","setState","arrayWithDuplicateKeywords","forEach","p","concat","Array","from","Set","e","criteria","value","filteredDataSet","filter","toLowerCase","includes","every","keywordsOptions","getDistinctSetOfKeywords","label","onChange","onDescriptionFilterChange","placeholder","onKeywordsFilterChange","options","isMulti","Policy","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae345437.chunk.js","sourcesContent":["import * as React from 'react';\n\ntype HighlightProps = {\n  /** text to display */\n  text: string,\n  /** substring to search in the text and highlight */\n  highlight: string,\n};\n\n/** Search and highlight part of a text */\nexport function Highlight(props: HighlightProps) {\n  let text = props.text;\n  let high = props.highlight;\n\n  let pos = text.toLocaleLowerCase().indexOf(high.toLocaleLowerCase());\n  if (pos < 0) {\n    return <span key=\"hl\">{text}</span>\n  }\n\n  let chunk1 = text.substring(0, pos);\n  let chunk2 = text.substring(pos, pos + high.length);\n  let chunk3 = text.substring(pos + high.length, text.length);\n\n  chunk1 = chunk1 ? <span key=\"m1\">{chunk1}</span> : null;\n  chunk2 = chunk2 ? <span key=\"m2\" style={{borderRadius: \"2px\"}}><mark>{chunk2}</mark></span> : null;\n  chunk3 = chunk3 ? <span key=\"m3\">{chunk3}</span> : null;\n\n  return <span key=\"hl\">{chunk1}{chunk2}{chunk3}</span>;\n}\n","import React, { useState } from 'react';\nimport { Highlight } from './Highlight';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\ntype Author = {\n  name: String,\n  homepage?: String,\n}\n\ntype Download = {\n  registry?: String,\n  url?: String,\n}\n\nexport type Policy = {\n  name: String,\n  description: String,\n  homepage: String,\n  author: Author,\n  download: Download,\n  keywords: Array<String>,\n  resources: Array<String>,\n  mutation: Boolean,\n}\n\ntype Props = {\n  Policy: Policy,\n  descriptionCriteria: String,\n};\n\n\nconst PolicyItem = (props: Props) => {\n  const [copied, setCopied] = useState(false);\n  const copyDone = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 1000);\n  };\n\n  const policy = props.policy;\n\n  return (\n    <article>\n      <div className=\"name\">{policy.name}</div>\n      <div className=\"content\">\n        <aside>\n          <a className=\"text-smaller link\"\n              href={policy.homepage}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\">\n                <HomeIcon />Homepage\n          </a>\n          <br/>\n          {\n            policy.author.homepage ?\n              <a className=\"text-smaller link\"\n                  href={policy.author.homepage}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"Author\">\n                    <PersonIcon />{policy.author.name}\n              </a>\n              : <span className=\"text-smaller not-a-real-link\"><PersonIcon />{policy.author.name}</span>\n          }\n          <br/>\n          <br/>\n          {\n            policy.download.registry ?\n              <CopyToClipboard text={policy.download.registry} onCopy={() => copyDone()}>\n                <button className=\"text-smaller button-link\">\n                  <FileCopyIcon />Copy registry\n                  {copied ? <div className=\"inline-but-absolute-message\">Copied!</div> : null}\n                </button>\n              </CopyToClipboard>\n            : null\n          }\n          <br/>\n          {\n            policy.download.url ?\n              <a className=\"text-smaller link download\"\n                href={policy.download.url}\n                rel=\"noopener noreferrer\">\n                  <GetAppIcon />Download Policy\n              </a>\n            : null\n          }\n          <br/>\n          <br/>\n          <div className=\"not-a-real-link mutation\"\n              title={policy.mutation ? \"Validation + Mutation Policy\" : \"Validation Policy\"}>\n            <SpellcheckIcon />{policy.mutation ? <EditIcon /> : null}\n          </div>\n        </aside>\n\n        <div className=\"text-bigger\">\n          <Highlight\n            text={policy.description}\n            highlight={props.descriptionCriteria}\n          />\n        </div>\n        <br/>\n        {\n          policy.download.registry ?\n            <div>\n              <span className=\"text-light text-tiny text-label\">REGISTRY&nbsp;</span>\n              <code className=\"text-smaller\">{policy.download.registry}</code>\n            </div>\n            : null\n        }\n        <div>\n          <span className=\"text-light text-tiny text-label\">RESOURCES&nbsp;</span>\n          {policy.resources.map(r => <span className=\"badge resource text-smaller\" key={policy.name + \"-\" + r}>{r}</span>)}\n        </div>\n        <div>\n          <span className=\"text-light text-tiny text-label\">KEYWORDS&nbsp;</span>\n          {policy.keywords.map(k => <span className=\"badge keyword text-smaller\" key={policy.name + \"-\" + k}>{k}</span>)}\n        </div>\n\n      </div>\n    </article>\n  );\n};\n\nexport default PolicyItem;\n","import './Hub.css';\nimport * as React from 'react';\nimport PolicyItem from './entities/Policy';\nimport Select from 'react-select';\n\nconst DATA_URL = \"https://raw.githubusercontent.com/chimera-kube/policy-hub/main/web/src/data/policy-hub.json\";\n\nclass Hub extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      descriptionCriteria: \"\",\n      dataSet: null,\n      keywordsOptionsSelected: [],\n    };\n  }\n\n  componentWillMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const response = await fetch(DATA_URL);\n    this.setState({ dataSet: await response.json()});\n  }\n\n  getDistinctSetOfKeywords() {\n    if (!this.state.dataSet) {\n      return [];\n    }\n    let arrayWithDuplicateKeywords = [];\n    this.state.dataSet.forEach(p => arrayWithDuplicateKeywords = arrayWithDuplicateKeywords.concat(...p.keywords));\n    return Array.from(new Set(arrayWithDuplicateKeywords));\n  }\n\n  onKeywordsFilterChange(e) {\n    this.setState({ keywordsOptionsSelected: e });\n  }\n\n  onDescriptionFilterChange(e) {\n    const criteria = e.target.value;\n    this.setState({ descriptionCriteria: criteria });\n  }\n\n  filter() {\n    let filteredDataSet = this.state.dataSet ? this.state.dataSet.filter(p =>\n        p.description.toLowerCase().includes(this.state.descriptionCriteria.toLowerCase()))\n      : [];\n\n    filteredDataSet = this.state.keywordsOptionsSelected.length > 0 ? filteredDataSet.filter(p =>\n        this.state.keywordsOptionsSelected.map(k => k.value).every(r => p.keywords.includes(r)))\n      : filteredDataSet;\n\n    return filteredDataSet;\n  }\n\n  render() {\n    let keywordsOptions = [];\n    this.getDistinctSetOfKeywords().forEach(k => {\n      keywordsOptions = [...keywordsOptions, {value: k, label: k}];\n    });\n\n    return (\n      <div className=\"Hub\">\n        <header className=\"Hub-header\">\n          <a href=\"/policy-hub\" className=\"header-homepage\" rel=\"noopener noreferrer\">Policy Hub</a>\n          <input\n            className=\"filter-box\"\n            name=\"filter-description\"\n            key=\"filter-description\"\n            onChange={(e) => this.onDescriptionFilterChange(e)}\n            placeholder=\"Filter by description\"\n          />\n          <div className=\"keywords-select-container\">\n            <Select\n              value={this.state.keywordsOptionsSelected}\n              onChange={(e) => this.onKeywordsFilterChange(e)}\n              options={keywordsOptions}\n              isMulti={true}\n              placeholder=\"Filter by keywords\"\n            />\n          </div>\n        </header>\n        <section>\n          {\n            !this.state.dataSet ?\n              <div className=\"loading\">Loading..</div>\n              : this.filter()\n                  .map(e =>\n                    <PolicyItem policy={e} key={e.name}\n                      descriptionCriteria={this.state.descriptionCriteria}\n                    />\n                  )\n          }\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Hub;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Hub from './Hub';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Hub />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}