(this.webpackJsonpweb=this.webpackJsonpweb||[]).push([[0],{12:function(e,t,i){},13:function(e,t,i){},15:function(e,t,i){"use strict";i.r(t);var r=i(1),a=i.n(r),c=i(3),s=i.n(c),l=(i(12),i(4)),o=i(5),n=i(7),p=i(6),b=(i(13),i(0)),u=function(e){return Object(b.jsxs)("div",{className:"policy-item",children:[Object(b.jsx)("div",{className:"title",children:e.policy.name}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"abstract:"}),Object(b.jsx)("span",{children:e.policy.abstract})]}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"source:"}),Object(b.jsx)("span",{children:Object(b.jsx)("a",{className:"link",href:e.policy.source,target:"_blank",rel:"noopener noreferrer",children:e.policy.source})})]}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"registry:"}),e.policy.download.url?Object(b.jsx)("span",{children:Object(b.jsx)("a",{className:"link",href:e.policy.download.url,target:"_blank",rel:"noopener noreferrer",children:e.policy.download.registry})}):Object(b.jsx)("span",{children:"registry not available"})]}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"resources:"}),e.policy.resources.map((function(t){return Object(b.jsx)("span",{children:t},e.policy.name+"-"+t)}))]}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"mutation:"}),Object(b.jsx)("span",{children:e.policy.mutation?"True":"False"})]}),Object(b.jsxs)("div",{className:"policy-item-field",children:[Object(b.jsx)("label",{children:"tags:"}),e.policy.tags.map((function(t){return Object(b.jsx)("p",{className:"tag",children:t},e.policy.name+"-"+t)}))]})]})},d=[{name:"psp-apparmor",abstract:"A Pod Security Policy that controls usage of AppArmor profiles",source:"https://github.com/chimera-kube/psp-apparmor",download:{registry:"ghcr.io/chimera-kube/policies/psp-apparmor:v0.1.1",url:"https://github.com/chimera-kube/psp-apparmor/releases/download/v0.1.1/policy.wasm"},tags:["PSP","AppArmor"],resources:["Pod"],mutation:!1},{name:"psp-capabilities",abstract:"A Pod Security Policy that controls Container Capabilities",source:"https://github.com/chimera-kube/psp-capabilities",download:{registry:"ghcr.io/chimera-kube/policies/psp-capabilities:v0.1.0",url:"https://github.com/chimera-kube/psp-capabilities/releases/download/v0.1.0/policy.wasm"},tags:["PSP","Container","Capabilities"],resources:["Pod"],mutation:!0},{name:"trusted-repo-source",abstract:"Restrict what registries, tags and images can be used",source:"https://github.com/chimera-kube/trusted-repos-policy",download:{registry:"ghcr.io/chimera-kube/policies/trusted-repos:latest"},tags:["Image","Registry","Tag"],resources:["Pod"],mutation:!1},{name:"psp-allow-privilege-escalation",abstract:"A Pod Security Policy that controls usage of `allowPrivilegeEscalation`",source:"https://github.com/chimera-kube/psp-allow-privilege-escalation",download:{registry:"ghcr.io/chimera-kube/policies/psp-allow-privilege-escalation:v0.1.1",url:"https://github.com/chimera-kube/psp-allow-privilege-escalation/releases/download/v0.1.1/policy.wasm"},tags:["PSP","Container","Privilege Escalation"],resources:["Pod"],mutation:!1},{name:"pod-privileged-policy",abstract:"Limit the ability to create privileged containers",source:"https://github.com/chimera-kube/pod-privileged-policy",download:{registry:"ghcr.io/chimera-kube/policies/pod-privileged-policy:v0.1.2",url:"https://github.com/chimera-kube/pod-privileged-policy/releases/download/v0.1.2/policy.wasm"},tags:["PSP","Container","Privileged"],resources:["Pod"],mutation:!1}],h=function(e){Object(n.a)(i,e);var t=Object(p.a)(i);function i(e){var r;return Object(l.a)(this,i),(r=t.call(this,e)).state={abstractCriteria:""},r}return Object(o.a)(i,[{key:"onAbstractFilterChange",value:function(e){var t=e.target.value;this.setState({abstractCriteria:t})}},{key:"filter",value:function(){var e=this;return d.filter((function(t){return t.abstract.includes(e.state.abstractCriteria)}))}},{key:"render",value:function(){var e=this;return Object(b.jsxs)("div",{className:"Hub",children:[Object(b.jsx)("header",{className:"Hub-header",children:Object(b.jsx)("a",{className:"link",href:"/policy-hub",target:"_blank",rel:"noopener noreferrer",children:"Policy Hub"})}),Object(b.jsxs)("section",{children:[Object(b.jsx)("div",{children:Object(b.jsx)("input",{name:"filter-abstract",onChange:function(t){return e.onAbstractFilterChange(t)},placeholder:"Filter by abstract"},"filter-abstract")}),this.filter().map((function(e){return Object(b.jsx)(u,{policy:e},e.name)}))]})]})}}]),i}(r.Component),m=function(e){e&&e instanceof Function&&i.e(3).then(i.bind(null,16)).then((function(t){var i=t.getCLS,r=t.getFID,a=t.getFCP,c=t.getLCP,s=t.getTTFB;i(e),r(e),a(e),c(e),s(e)}))};s.a.render(Object(b.jsx)(a.a.StrictMode,{children:Object(b.jsx)(h,{})}),document.getElementById("root")),m()}},[[15,1,2]]]);
//# sourceMappingURL=main.1da67f15.chunk.js.map